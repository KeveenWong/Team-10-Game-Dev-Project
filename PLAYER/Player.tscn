[gd_scene load_steps=28 format=2]

[ext_resource path="res://PLAYER/protagonist.png" type="Texture" id=1]
[ext_resource path="res://SCRIPTS/Player.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 color : hint_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false

void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a == 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/width = 0.551
shader_param/pattern = 0
shader_param/inside = false
shader_param/add_margins = true

[sub_resource type="CapsuleShape2D" id=3]
radius = 3.55869
height = 1.40179

[sub_resource type="Animation" id=4]
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=5]
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 3 ]
}

[sub_resource type="Animation" id=6]
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 2 ]
}

[sub_resource type="Animation" id=7]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 5, 6, 7, 8, 9, 10 ]
}

[sub_resource type="Animation" id=8]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 26, 27, 28, 29, 30, 31 ]
}

[sub_resource type="Animation" id=9]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 19, 20, 21, 22, 23, 24 ]
}

[sub_resource type="Animation" id=10]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14, 15, 16, 17 ]
}

[sub_resource type="Animation" id=11]
length = 0.1
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}

[sub_resource type="AnimationNodeAnimation" id=12]
animation = "IdleLeft"

[sub_resource type="AnimationNodeAnimation" id=13]
animation = "IdleDown"

[sub_resource type="AnimationNodeAnimation" id=14]
animation = "IdleRight"

[sub_resource type="AnimationNodeAnimation" id=15]
animation = "idleUp"

[sub_resource type="AnimationNodeBlendSpace2D" id=16]
auto_triangles = false
blend_point_0/node = SubResource( 12 )
blend_point_0/pos = Vector2( -1, 0 )
blend_point_1/node = SubResource( 13 )
blend_point_1/pos = Vector2( 0, 0.9 )
blend_point_2/node = SubResource( 14 )
blend_point_2/pos = Vector2( 1, 0 )
blend_point_3/node = SubResource( 15 )
blend_point_3/pos = Vector2( 0, -0.9 )
triangles = PoolIntArray( 0, 1, 3, 1, 2, 3 )
min_space = Vector2( -1, -0.9 )
max_space = Vector2( 1, 0.9 )
blend_mode = 1

[sub_resource type="AnimationNodeAnimation" id=17]
animation = "RunLeft"

[sub_resource type="AnimationNodeAnimation" id=18]
animation = "RunDown"

[sub_resource type="AnimationNodeAnimation" id=19]
animation = "RunRight"

[sub_resource type="AnimationNodeAnimation" id=20]
animation = "RunUp"

[sub_resource type="AnimationNodeBlendSpace2D" id=21]
blend_point_0/node = SubResource( 17 )
blend_point_0/pos = Vector2( -1, 0 )
blend_point_1/node = SubResource( 18 )
blend_point_1/pos = Vector2( 0, 0.9 )
blend_point_2/node = SubResource( 19 )
blend_point_2/pos = Vector2( 1, 0 )
blend_point_3/node = SubResource( 20 )
blend_point_3/pos = Vector2( 0, -0.9 )
min_space = Vector2( -1, -0.9 )
max_space = Vector2( 1, 0.9 )
blend_mode = 1

[sub_resource type="AnimationNodeStateMachineTransition" id=22]

[sub_resource type="AnimationNodeStateMachineTransition" id=23]

[sub_resource type="AnimationNodeStateMachine" id=24]
states/Idle/node = SubResource( 16 )
states/Idle/position = Vector2( 699, 146 )
states/Run/node = SubResource( 21 )
states/Run/position = Vector2( 883, 146 )
transitions = [ "Idle", "Run", SubResource( 22 ), "Run", "Idle", SubResource( 23 ) ]
start_node = "Idle"

[sub_resource type="AnimationNodeStateMachinePlayback" id=25]

[node name="Player" type="KinematicBody2D" groups=[
"Persist",
"Player",
]]
script = ExtResource( 2 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
texture = ExtResource( 1 )
hframes = 32

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -7.62939e-06, 4.24743 )
shape = SubResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/IdleDown = SubResource( 4 )
anims/IdleLeft = SubResource( 5 )
anims/IdleRight = SubResource( 6 )
anims/RunDown = SubResource( 7 )
anims/RunLeft = SubResource( 8 )
anims/RunRight = SubResource( 9 )
anims/RunUp = SubResource( 10 )
anims/idleUp = SubResource( 11 )

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( 24 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 25 )
parameters/Idle/blend_position = Vector2( 0, 0 )
parameters/Run/blend_position = Vector2( 0, 0 )
